This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
src/
  endpoints/
    enriched.ts
    top10.ts
    topPlayerHistory.ts
    user.ts
  utils/
    schemas.ts
  index.ts
test/
  endpoints/
    E2E/
      enriched.e2e.spec.ts
      top10.e2e.spec.ts
      topPlayerHistory.e2e.spec.ts
      user.e2e.spec.ts
    integration/
      enriched.integration.spec.ts
      top10.integration.spec.ts
      topPlayerHistory.integration.spec.ts
      user.integration.spec.ts
  mocks/
    enrichedUserPerformance.json
    playerRatingHistory.json
    top10.json
    topPlayerOfBulletGames.json
    user.json
.gitignore
jest.config.js
package.json
tsconfig.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="test/endpoints/E2E/topPlayerHistory.e2e.spec.ts">
import app from '../../../src/index';
import supertest from 'supertest';
import nock from 'nock';
import mockTopPlayerOfBulletGames from '../../mocks/topPlayerOfBulletGames.json';
import mockPlayerRatingHistory from '../../mocks/playerRatingHistory.json';

describe('Top10 E2E tests', () => { 
  let request: any;
    const lichessApiScope = nock('https://lichess.org');
    const mode = 'bullet';
    const top = '1';

  beforeAll(async () => {
    await app.ready();
    request = supertest(app.server as any);
  });

  afterEach(() => {
    nock.cleanAll();
  });

  afterAll(async () => {
    await app.close();
    nock.restore();
  });

  it('Returns 200 with the enriched data if the external API succeeds', async () => {
    lichessApiScope.get(`/api/player/top/${top}/${mode}`).reply(200, mockTopPlayerOfBulletGames);
    lichessApiScope.get(`/api/user/Ediz_Gurel/rating-history`).reply(200, mockPlayerRatingHistory);

    const response = await request.get(`/chess/topPlayerHistory?mode=${mode}&top=${top}`);
    
    expect(response.statusCode).toBe(200);

    const body = response.body;
    expect(body.username).toBe('Ediz_Gurel');
    expect(body.history[0].date).toBe('2023-02-15');
    expect(body.history[0].rating).toBe(2846);
    expect(body.history[1].date).toBe('2023-02-16');
    expect(body.history[1].rating).toBe(2951);

    expect(nock.isDone()).toBe(true);
  });

  it('Returns 500 if the external Lichess API fails at first request', async () => {
    lichessApiScope.get(`/api/player/top/${top}/${mode}`).reply(500, { error: 'Server Error' });
    lichessApiScope.get(`/api/user/Ediz_Gurel/rating-history`).reply(200, mockPlayerRatingHistory);

    const response = await request.get(`/chess/topPlayerHistory?mode=${mode}&top=${top}`);
    
    expect(response.statusCode).toBe(500);
    expect(response.body).toEqual({ error: 'Internal server error.' });
  });

  it('Returns 500 if the external Lichess API fails at second request', async () => {
    lichessApiScope.get(`/api/player/top/${top}/${mode}`).reply(200, mockTopPlayerOfBulletGames);
    lichessApiScope.get(`/api/user/Ediz_Gurel/rating-history`).reply(500, { error: 'Server Error' });

    const response = await request.get(`/chess/topPlayerHistory?mode=${mode}&top=${top}`);
    
    expect(response.statusCode).toBe(500);
    expect(response.body).toEqual({ error: 'Internal server error.' });
  });
  
});
</file>

<file path="test/endpoints/integration/top10.integration.spec.ts">
import app from '../../../src/index';
import axios from 'axios';

jest.mock('axios');
const mockedAxios = axios as jest.Mocked<typeof axios>;

describe('Top10 integration tests', () => {
    beforeAll(async () => {
      await app.ready();
    });
  
    afterAll(async () => {
      await app.close();
    });
  
    it('Returns data if axios succeeds', async () => {
      mockedAxios.get.mockResolvedValueOnce({ data: { top10: [] } });
  
      const response = await app.inject({
        method: 'GET',
        url: '/chess/top10'
      });
  
      expect(response.statusCode).toBe(200);
      expect(response.json()).toEqual({ top10: [] });
    });
  
    it('Returns 500 if axios fails', async () => {
      mockedAxios.get.mockRejectedValueOnce(new Error('API down'));
  
      const response = await app.inject({
        method: 'GET',
        url: '/chess/top10'
      });
  
      expect(response.statusCode).toBe(500);
      expect(response.json()).toEqual({ error: 'Internal server error.' });
    });
  });
</file>

<file path="test/endpoints/integration/topPlayerHistory.integration.spec.ts">
jest.mock('axios');

import axios, { AxiosError } from 'axios';
import app from '../../../src/index';

const mockedAxios = axios as jest.Mocked<typeof axios>;

describe('Top Player History integration tests', () => {
  beforeAll(async () => {
    await app.ready();
  });

  afterAll(async () => {
    await app.close();
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('Returns player history data if both axios calls succeed', async () => {
    const mockLeaderboardData = {
      users: [
        {
          id: 'ediz_gurel',
          username: 'Ediz_Gurel',
          perfs: {
            bullet: {
              rating: 3342,
              progress: 20
            }
          },
          title: 'GM',
          patron: true
        }
      ]
    }

    const mockRatingHistoryData = [
      {
        name: 'Bullet',
        points: [
          [2023, 2, 15, 2846],
          [2023, 2, 16, 2951]
        ]
      },
      {
        name: 'Blitz',
        points: [
          [2025, 2, 15, 2846],
          [2025, 2, 16, 2951]
        ]
      }
    ];

    mockedAxios.get.mockResolvedValueOnce({ data: mockLeaderboardData });
    mockedAxios.get.mockResolvedValueOnce({ data: mockRatingHistoryData });

    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=bullet&top=1'
    });

    expect(response.statusCode).toBe(200);
    expect(response.json()).toEqual({
      username: 'Ediz_Gurel',
      history: [{ date: '2023-02-15', rating: 2846 }, { date: '2023-02-16', rating: 2951 }]
    });
  });

  it('Returns 400 if mode is missing', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?top=1'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'mode' or 'top' parameter." });
  });
  it('Returns 400 if top is missing', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=bullet'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'mode' or 'top' parameter." });
  });

  it('Returns 400 if top is not a number', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=bullet&top=not_a_number'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'mode' or 'top' parameter." });
  });

  it('Return 400 if top is greater than 200', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=bullet&top=201'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'mode' or 'top' parameter." });
  });

  it('Returns 400 if top is less than 1', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=bullet&top=0'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'mode' or 'top' parameter." });
  });

  it('Returns 404 if mode is not found', async () => {
    const error404 = Object.assign(new Error('Not Found'), {
      isAxiosError: true,
      response: { status: 404 }
    }) as AxiosError;

    mockedAxios.get.mockRejectedValueOnce(error404);

    const response = await app.inject({
      method: 'GET',
      url: '/chess/topPlayerHistory?mode=this_is_not_a_mode&top=1'
    });

    expect(response.statusCode).toBe(404);
    expect(response.json()).toEqual({ error: "Game Mode not found." });
  });
});
</file>

<file path="test/mocks/enrichedUserPerformance.json">
{
    "user": {
        "name": "thibault"
    },
    "perf": {
        "glicko": {
            "rating": 1726.91,
            "deviation": 53.21
        },
        "nb": 11470,
        "progress": 2
    },
    "rank": null,
    "percentile": 70.5,
    "stat": {
        "id": "thibault/2",
        "userId": {
            "id": "thibault",
            "name": "thibault",
            "title": null
        },
        "perfType": {
            "key": "blitz",
            "name": "Blitz"
        },
        "highest": {
            "int": 1970,
            "at": "2022-02-23T13:44:54.633Z",
            "gameId": "Blpjmhnf"
        },
        "lowest": {
            "int": 1385,
            "at": "2015-08-05T10:13:41.326Z",
            "gameId": "tgbRykg2"
        },
        "bestWins": {
            "results": [
                {
                    "opRating": 2239,
                    "opId": {
                        "id": "aqua21",
                        "name": "aqua21",
                        "title": null
                    },
                    "at": "2020-02-15T19:13:05.329Z",
                    "gameId": "UxNJmMXz"
                },
                {
                    "opRating": 2163,
                    "opId": {
                        "id": "staffan67",
                        "name": "Staffan67",
                        "title": null
                    },
                    "at": "2022-12-28T10:54:21.597Z",
                    "gameId": "9IMlwEv1"
                },
                {
                    "opRating": 2120,
                    "opId": {
                        "id": "heissenberger",
                        "name": "Heissenberger",
                        "title": null
                    },
                    "at": "2021-10-25T08:26:27.155Z",
                    "gameId": "2buPRuV8"
                },
                {
                    "opRating": 2051,
                    "opId": {
                        "id": "stas235",
                        "name": "Stas235",
                        "title": null
                    },
                    "at": "2021-11-06T18:55:53.728Z",
                    "gameId": "VLxCVzDY"
                },
                {
                    "opRating": 2040,
                    "opId": {
                        "id": "harryz-77",
                        "name": "Harryz-77",
                        "title": null
                    },
                    "at": "2021-11-03T17:39:40.181Z",
                    "gameId": "eCgiYDS7"
                }
            ]
        },
        "worstLosses": {
            "results": [
                {
                    "opRating": 995,
                    "opId": {
                        "id": "dahupetitjoueur",
                        "name": "dahupetitjoueur",
                        "title": null
                    },
                    "at": "2017-04-12T14:31:58.002Z",
                    "gameId": "7zyddy2c"
                },
                {
                    "opRating": 1121,
                    "opId": {
                        "id": "tinkugupta1011",
                        "name": "Tinkugupta1011",
                        "title": null
                    },
                    "at": "2022-10-22T03:36:35.447Z",
                    "gameId": "CCyyGKmD"
                },
                {
                    "opRating": 1146,
                    "opId": {
                        "id": "chemkhihabib",
                        "name": "chemkhihabib",
                        "title": null
                    },
                    "at": "2016-06-01T09:31:09.694Z",
                    "gameId": "XatMm3RO"
                },
                {
                    "opRating": 1166,
                    "opId": {
                        "id": "bottios",
                        "name": "Bottios",
                        "title": "BOT"
                    },
                    "at": "2018-12-14T09:22:52.633Z",
                    "gameId": "3fke4MHX"
                },
                {
                    "opRating": 1182,
                    "opId": {
                        "id": "skanerterry",
                        "name": "skanerterry",
                        "title": null
                    },
                    "at": "2016-06-09T15:32:10.474Z",
                    "gameId": "n4ViqGlp"
                }
            ]
        },
        "count": {
            "all": 11952,
            "rated": 11348,
            "win": 5652,
            "loss": 5734,
            "draw": 566,
            "tour": 1582,
            "berserk": 49,
            "opAvg": 1705.86,
            "seconds": 3705607,
            "disconnects": 9
        },
        "resultStreak": {
            "win": {
                "cur": {
                    "v": 1,
                    "from": {
                        "at": "2025-06-15T15:48:23.821Z",
                        "gameId": "NrZuXH2T"
                    },
                    "to": {
                        "at": "2025-06-15T15:51:29.299Z",
                        "gameId": "NrZuXH2T"
                    }
                },
                "max": {
                    "v": 11,
                    "from": {
                        "at": "2018-10-19T10:02:05.144Z",
                        "gameId": "ycmyqK6e"
                    },
                    "to": {
                        "at": "2018-10-19T12:25:31.868Z",
                        "gameId": "3PwQXIBN"
                    }
                }
            },
            "loss": {
                "cur": {
                    "v": 0
                },
                "max": {
                    "v": 19,
                    "from": {
                        "at": "2018-03-09T23:54:54.771Z",
                        "gameId": "iAJe1M8f"
                    },
                    "to": {
                        "at": "2018-03-16T20:52:03.611Z",
                        "gameId": "7CZ1SEF5"
                    }
                }
            }
        },
        "playStreak": {
            "nb": {
                "cur": {
                    "v": 0
                },
                "max": {
                    "v": 115,
                    "from": {
                        "at": "2024-10-18T11:32:12.142Z",
                        "gameId": "l819pRNp"
                    },
                    "to": {
                        "at": "2024-10-18T20:54:30.256Z",
                        "gameId": "1HeDeGbe"
                    }
                }
            },
            "time": {
                "cur": {
                    "v": 0
                },
                "max": {
                    "v": 23231,
                    "from": {
                        "at": "2024-10-18T11:32:12.142Z",
                        "gameId": "l819pRNp"
                    },
                    "to": {
                        "at": "2024-10-18T20:54:30.256Z",
                        "gameId": "1HeDeGbe"
                    }
                }
            },
            "lastDate": "2025-06-15T15:51:29.299Z"
        }
    }
}
</file>

<file path="test/mocks/playerRatingHistory.json">
[
    {
        "name": "Bullet",
        "points": [
            [
                2023,
                2,
                15,
                2846
            ],
            [
                2023,
                2,
                16,
                2951
            ],
            [
                2023,
                2,
                17,
                2967
            ],
            [
                2023,
                2,
                19,
                3002
            ],
            [
                2023,
                2,
                21,
                3026
            ],
            [
                2023,
                2,
                23,
                3024
            ],
            [
                2023,
                2,
                25,
                3013
            ],
            [
                2023,
                2,
                29,
                2989
            ],
            [
                2023,
                2,
                30,
                2999
            ],
            [
                2023,
                3,
                3,
                3005
            ],
            [
                2023,
                3,
                16,
                3005
            ],
            [
                2023,
                3,
                18,
                3021
            ],
            [
                2023,
                3,
                19,
                3022
            ],
            [
                2023,
                3,
                20,
                3102
            ],
            [
                2023,
                3,
                22,
                3089
            ],
            [
                2023,
                3,
                23,
                3094
            ],
            [
                2023,
                4,
                9,
                3094
            ],
            [
                2023,
                4,
                10,
                3105
            ],
            [
                2023,
                4,
                12,
                3065
            ],
            [
                2023,
                4,
                13,
                3051
            ],
            [
                2023,
                4,
                17,
                3055
            ],
            [
                2023,
                4,
                18,
                3057
            ],
            [
                2023,
                4,
                19,
                3047
            ],
            [
                2023,
                4,
                23,
                3039
            ],
            [
                2023,
                4,
                24,
                3081
            ],
            [
                2023,
                4,
                25,
                3061
            ],
            [
                2023,
                4,
                28,
                3101
            ],
            [
                2023,
                4,
                29,
                3071
            ],
            [
                2023,
                4,
                31,
                3051
            ],
            [
                2023,
                5,
                1,
                3009
            ],
            [
                2023,
                5,
                2,
                3022
            ],
            [
                2023,
                5,
                4,
                3030
            ],
            [
                2023,
                5,
                12,
                3009
            ],
            [
                2023,
                5,
                14,
                3004
            ],
            [
                2023,
                5,
                15,
                3017
            ],
            [
                2023,
                5,
                16,
                3002
            ],
            [
                2023,
                5,
                17,
                3014
            ],
            [
                2023,
                5,
                18,
                3054
            ],
            [
                2023,
                5,
                20,
                3036
            ],
            [
                2023,
                5,
                21,
                3046
            ],
            [
                2023,
                5,
                22,
                3057
            ],
            [
                2023,
                5,
                23,
                3050
            ],
            [
                2023,
                5,
                24,
                3025
            ],
            [
                2023,
                5,
                25,
                3046
            ],
            [
                2023,
                5,
                26,
                3101
            ],
            [
                2023,
                5,
                27,
                3102
            ],
            [
                2023,
                6,
                8,
                3132
            ],
            [
                2023,
                6,
                21,
                3202
            ],
            [
                2023,
                6,
                24,
                3192
            ],
            [
                2023,
                6,
                25,
                3203
            ],
            [
                2023,
                7,
                3,
                3102
            ],
            [
                2023,
                7,
                4,
                3084
            ],
            [
                2023,
                7,
                5,
                3078
            ],
            [
                2023,
                7,
                6,
                3064
            ],
            [
                2023,
                7,
                7,
                3119
            ],
            [
                2023,
                7,
                8,
                3078
            ],
            [
                2023,
                7,
                9,
                3081
            ],
            [
                2023,
                7,
                10,
                3057
            ],
            [
                2023,
                7,
                11,
                3059
            ],
            [
                2023,
                7,
                18,
                3037
            ],
            [
                2023,
                7,
                20,
                3055
            ],
            [
                2023,
                7,
                22,
                3031
            ],
            [
                2023,
                7,
                27,
                3051
            ],
            [
                2023,
                7,
                28,
                3070
            ],
            [
                2023,
                7,
                29,
                3110
            ],
            [
                2023,
                7,
                30,
                3114
            ],
            [
                2023,
                7,
                31,
                3002
            ],
            [
                2023,
                8,
                1,
                3103
            ],
            [
                2023,
                8,
                3,
                3071
            ],
            [
                2023,
                8,
                4,
                3054
            ],
            [
                2023,
                8,
                5,
                3093
            ],
            [
                2023,
                8,
                6,
                3062
            ],
            [
                2023,
                8,
                7,
                3100
            ],
            [
                2023,
                8,
                9,
                3161
            ],
            [
                2023,
                8,
                10,
                3131
            ],
            [
                2023,
                8,
                11,
                3109
            ],
            [
                2023,
                8,
                12,
                3102
            ],
            [
                2023,
                8,
                13,
                3117
            ],
            [
                2023,
                8,
                14,
                3120
            ],
            [
                2023,
                8,
                15,
                3079
            ],
            [
                2023,
                8,
                16,
                3069
            ],
            [
                2023,
                8,
                17,
                3080
            ],
            [
                2023,
                8,
                19,
                3064
            ],
            [
                2023,
                8,
                20,
                3069
            ],
            [
                2023,
                8,
                21,
                3061
            ],
            [
                2023,
                8,
                22,
                3047
            ],
            [
                2023,
                8,
                23,
                3045
            ],
            [
                2023,
                8,
                24,
                3066
            ],
            [
                2023,
                8,
                25,
                3075
            ],
            [
                2023,
                8,
                26,
                3084
            ],
            [
                2023,
                8,
                27,
                3045
            ],
            [
                2023,
                8,
                28,
                3067
            ],
            [
                2023,
                9,
                8,
                3042
            ],
            [
                2023,
                9,
                9,
                3057
            ],
            [
                2023,
                9,
                17,
                3065
            ],
            [
                2023,
                9,
                20,
                3103
            ],
            [
                2023,
                9,
                21,
                3077
            ],
            [
                2023,
                10,
                7,
                3061
            ],
            [
                2023,
                10,
                8,
                3082
            ],
            [
                2023,
                10,
                9,
                3101
            ],
            [
                2023,
                10,
                10,
                3127
            ],
            [
                2023,
                10,
                11,
                3078
            ],
            [
                2023,
                10,
                12,
                3102
            ],
            [
                2023,
                10,
                13,
                3092
            ],
            [
                2023,
                10,
                14,
                3119
            ],
            [
                2023,
                10,
                15,
                3114
            ],
            [
                2023,
                10,
                16,
                3108
            ],
            [
                2023,
                10,
                18,
                3131
            ],
            [
                2023,
                10,
                19,
                3143
            ],
            [
                2023,
                10,
                20,
                3121
            ],
            [
                2023,
                10,
                21,
                3133
            ],
            [
                2023,
                10,
                22,
                3112
            ],
            [
                2023,
                10,
                27,
                3093
            ],
            [
                2023,
                10,
                28,
                3050
            ],
            [
                2023,
                10,
                29,
                3063
            ],
            [
                2023,
                10,
                30,
                3101
            ],
            [
                2023,
                11,
                1,
                3116
            ],
            [
                2023,
                11,
                2,
                3108
            ],
            [
                2023,
                11,
                3,
                3114
            ],
            [
                2023,
                11,
                7,
                3111
            ],
            [
                2023,
                11,
                8,
                3130
            ],
            [
                2023,
                11,
                9,
                3165
            ],
            [
                2023,
                11,
                10,
                3185
            ],
            [
                2023,
                11,
                11,
                3174
            ],
            [
                2023,
                11,
                12,
                3153
            ],
            [
                2023,
                11,
                15,
                3135
            ],
            [
                2023,
                11,
                17,
                3131
            ],
            [
                2023,
                11,
                18,
                3132
            ],
            [
                2023,
                11,
                19,
                3124
            ],
            [
                2023,
                11,
                20,
                3117
            ],
            [
                2023,
                11,
                21,
                3111
            ],
            [
                2023,
                11,
                23,
                2970
            ],
            [
                2023,
                11,
                24,
                3100
            ],
            [
                2023,
                11,
                31,
                3131
            ],
            [
                2024,
                0,
                1,
                3113
            ],
            [
                2024,
                0,
                4,
                3088
            ],
            [
                2024,
                0,
                5,
                3111
            ],
            [
                2024,
                0,
                7,
                3116
            ],
            [
                2024,
                0,
                8,
                3111
            ],
            [
                2024,
                0,
                9,
                3133
            ],
            [
                2024,
                0,
                11,
                3200
            ],
            [
                2024,
                0,
                12,
                3205
            ],
            [
                2024,
                0,
                17,
                3228
            ],
            [
                2024,
                0,
                18,
                3241
            ],
            [
                2024,
                0,
                22,
                3246
            ],
            [
                2024,
                0,
                23,
                3289
            ],
            [
                2024,
                0,
                24,
                3301
            ],
            [
                2024,
                0,
                28,
                3251
            ],
            [
                2024,
                0,
                29,
                3210
            ],
            [
                2024,
                0,
                30,
                3203
            ],
            [
                2024,
                0,
                31,
                3221
            ],
            [
                2024,
                1,
                1,
                3211
            ],
            [
                2024,
                1,
                3,
                3200
            ],
            [
                2024,
                1,
                4,
                3211
            ],
            [
                2024,
                1,
                5,
                3221
            ],
            [
                2024,
                1,
                6,
                3208
            ],
            [
                2024,
                1,
                7,
                3202
            ],
            [
                2024,
                1,
                8,
                3227
            ],
            [
                2024,
                1,
                10,
                3189
            ],
            [
                2024,
                1,
                11,
                3158
            ],
            [
                2024,
                1,
                12,
                3148
            ],
            [
                2024,
                1,
                13,
                3152
            ],
            [
                2024,
                1,
                15,
                3148
            ],
            [
                2024,
                1,
                16,
                3142
            ],
            [
                2024,
                1,
                17,
                3152
            ],
            [
                2024,
                1,
                18,
                3158
            ],
            [
                2024,
                1,
                19,
                3127
            ],
            [
                2024,
                1,
                20,
                3129
            ],
            [
                2024,
                1,
                21,
                3129
            ],
            [
                2024,
                1,
                22,
                3121
            ],
            [
                2024,
                1,
                23,
                3140
            ],
            [
                2024,
                1,
                24,
                3137
            ],
            [
                2024,
                1,
                25,
                3146
            ],
            [
                2024,
                1,
                26,
                3123
            ],
            [
                2024,
                2,
                9,
                3115
            ],
            [
                2024,
                2,
                10,
                3122
            ],
            [
                2024,
                2,
                11,
                3107
            ],
            [
                2024,
                2,
                15,
                3130
            ],
            [
                2024,
                2,
                16,
                3130
            ],
            [
                2024,
                2,
                17,
                3105
            ],
            [
                2024,
                2,
                19,
                3134
            ],
            [
                2024,
                2,
                20,
                3127
            ],
            [
                2024,
                2,
                21,
                3125
            ],
            [
                2024,
                2,
                22,
                3120
            ],
            [
                2024,
                2,
                23,
                3074
            ],
            [
                2024,
                2,
                24,
                3103
            ],
            [
                2024,
                2,
                25,
                3119
            ],
            [
                2024,
                2,
                26,
                3112
            ],
            [
                2024,
                2,
                27,
                3142
            ],
            [
                2024,
                2,
                28,
                3136
            ],
            [
                2024,
                2,
                29,
                3139
            ],
            [
                2024,
                2,
                30,
                3103
            ],
            [
                2024,
                2,
                31,
                3108
            ],
            [
                2024,
                3,
                1,
                3145
            ],
            [
                2024,
                3,
                2,
                3140
            ],
            [
                2024,
                3,
                3,
                3173
            ],
            [
                2024,
                3,
                4,
                3180
            ],
            [
                2024,
                3,
                5,
                3201
            ],
            [
                2024,
                3,
                7,
                3201
            ],
            [
                2024,
                3,
                8,
                3203
            ],
            [
                2024,
                3,
                9,
                3223
            ],
            [
                2024,
                3,
                11,
                3249
            ],
            [
                2024,
                3,
                17,
                3237
            ],
            [
                2024,
                3,
                19,
                3241
            ],
            [
                2024,
                3,
                22,
                3193
            ],
            [
                2024,
                3,
                23,
                3166
            ],
            [
                2024,
                3,
                24,
                3200
            ],
            [
                2024,
                4,
                4,
                3202
            ],
            [
                2024,
                4,
                6,
                3180
            ],
            [
                2024,
                4,
                8,
                3179
            ],
            [
                2024,
                4,
                9,
                3200
            ],
            [
                2024,
                4,
                10,
                3165
            ],
            [
                2024,
                4,
                11,
                3150
            ],
            [
                2024,
                4,
                12,
                3159
            ],
            [
                2024,
                4,
                22,
                3145
            ],
            [
                2024,
                4,
                23,
                3171
            ],
            [
                2024,
                4,
                24,
                3175
            ],
            [
                2024,
                4,
                25,
                3233
            ],
            [
                2024,
                4,
                27,
                3245
            ],
            [
                2024,
                4,
                28,
                3249
            ],
            [
                2024,
                4,
                29,
                3200
            ],
            [
                2024,
                4,
                30,
                3170
            ],
            [
                2024,
                4,
                31,
                3220
            ],
            [
                2024,
                5,
                1,
                3216
            ],
            [
                2024,
                5,
                2,
                3261
            ],
            [
                2024,
                5,
                3,
                3238
            ],
            [
                2024,
                5,
                4,
                3234
            ],
            [
                2024,
                5,
                5,
                3232
            ],
            [
                2024,
                5,
                7,
                3215
            ],
            [
                2024,
                5,
                8,
                3218
            ],
            [
                2024,
                5,
                9,
                3213
            ],
            [
                2024,
                5,
                10,
                3207
            ],
            [
                2024,
                5,
                13,
                3151
            ],
            [
                2024,
                5,
                17,
                3171
            ],
            [
                2024,
                5,
                18,
                3215
            ],
            [
                2024,
                5,
                19,
                3153
            ],
            [
                2024,
                5,
                21,
                3145
            ],
            [
                2024,
                5,
                23,
                3162
            ],
            [
                2024,
                5,
                24,
                3164
            ],
            [
                2024,
                5,
                25,
                3207
            ],
            [
                2024,
                5,
                26,
                3192
            ],
            [
                2024,
                5,
                27,
                3186
            ],
            [
                2024,
                5,
                28,
                3226
            ],
            [
                2024,
                5,
                30,
                3261
            ],
            [
                2024,
                6,
                4,
                3263
            ],
            [
                2024,
                6,
                5,
                3301
            ],
            [
                2024,
                6,
                11,
                3315
            ],
            [
                2024,
                6,
                27,
                3263
            ],
            [
                2024,
                6,
                31,
                3300
            ],
            [
                2024,
                7,
                6,
                3301
            ],
            [
                2024,
                7,
                7,
                3288
            ],
            [
                2024,
                7,
                8,
                3285
            ],
            [
                2024,
                7,
                9,
                3293
            ],
            [
                2024,
                7,
                10,
                3300
            ],
            [
                2024,
                7,
                11,
                3288
            ],
            [
                2024,
                7,
                12,
                3251
            ],
            [
                2024,
                7,
                14,
                3230
            ],
            [
                2024,
                7,
                15,
                3271
            ],
            [
                2024,
                7,
                16,
                3234
            ],
            [
                2024,
                7,
                18,
                3300
            ],
            [
                2024,
                7,
                19,
                3305
            ],
            [
                2024,
                7,
                22,
                3305
            ],
            [
                2024,
                7,
                23,
                3307
            ],
            [
                2024,
                7,
                24,
                3243
            ],
            [
                2024,
                7,
                25,
                3273
            ],
            [
                2024,
                7,
                26,
                3301
            ],
            [
                2024,
                8,
                1,
                3284
            ],
            [
                2024,
                8,
                2,
                3296
            ],
            [
                2024,
                8,
                3,
                3321
            ],
            [
                2024,
                8,
                4,
                3330
            ],
            [
                2024,
                8,
                5,
                3340
            ],
            [
                2024,
                8,
                6,
                3340
            ],
            [
                2024,
                8,
                8,
                3341
            ],
            [
                2024,
                8,
                22,
                3326
            ],
            [
                2024,
                8,
                24,
                3285
            ],
            [
                2024,
                8,
                25,
                3300
            ],
            [
                2024,
                8,
                29,
                3272
            ],
            [
                2024,
                8,
                30,
                3279
            ],
            [
                2024,
                9,
                1,
                3266
            ],
            [
                2024,
                9,
                2,
                3216
            ],
            [
                2024,
                9,
                3,
                3261
            ],
            [
                2024,
                9,
                4,
                3302
            ],
            [
                2024,
                9,
                5,
                3327
            ],
            [
                2024,
                9,
                7,
                3327
            ],
            [
                2024,
                9,
                12,
                3350
            ],
            [
                2024,
                9,
                13,
                3326
            ],
            [
                2024,
                9,
                15,
                3243
            ],
            [
                2024,
                9,
                16,
                3258
            ],
            [
                2024,
                9,
                17,
                3243
            ],
            [
                2024,
                9,
                18,
                3245
            ],
            [
                2024,
                9,
                27,
                3260
            ],
            [
                2024,
                9,
                28,
                3300
            ],
            [
                2024,
                9,
                29,
                3301
            ],
            [
                2024,
                9,
                30,
                3308
            ],
            [
                2024,
                9,
                31,
                3310
            ],
            [
                2024,
                10,
                1,
                3320
            ],
            [
                2024,
                10,
                2,
                3331
            ],
            [
                2024,
                10,
                3,
                3321
            ],
            [
                2024,
                10,
                20,
                3257
            ],
            [
                2024,
                10,
                21,
                3245
            ],
            [
                2024,
                10,
                22,
                3268
            ],
            [
                2024,
                10,
                23,
                3271
            ],
            [
                2024,
                10,
                24,
                3260
            ],
            [
                2024,
                10,
                25,
                3243
            ],
            [
                2024,
                10,
                26,
                3268
            ],
            [
                2024,
                10,
                27,
                3281
            ],
            [
                2024,
                10,
                29,
                3306
            ],
            [
                2024,
                10,
                30,
                3306
            ],
            [
                2024,
                11,
                1,
                3266
            ],
            [
                2024,
                11,
                2,
                3284
            ],
            [
                2024,
                11,
                3,
                3281
            ],
            [
                2024,
                11,
                5,
                3266
            ],
            [
                2024,
                11,
                6,
                3249
            ],
            [
                2024,
                11,
                7,
                3212
            ],
            [
                2024,
                11,
                8,
                3192
            ],
            [
                2024,
                11,
                9,
                3208
            ],
            [
                2024,
                11,
                10,
                3216
            ],
            [
                2024,
                11,
                11,
                3261
            ],
            [
                2024,
                11,
                13,
                3236
            ],
            [
                2024,
                11,
                14,
                3254
            ],
            [
                2024,
                11,
                15,
                3301
            ],
            [
                2024,
                11,
                18,
                3275
            ],
            [
                2024,
                11,
                19,
                3256
            ],
            [
                2024,
                11,
                20,
                3300
            ],
            [
                2024,
                11,
                22,
                3307
            ],
            [
                2024,
                11,
                23,
                3326
            ],
            [
                2024,
                11,
                25,
                3275
            ],
            [
                2024,
                11,
                27,
                3302
            ],
            [
                2024,
                11,
                28,
                3330
            ],
            [
                2024,
                11,
                30,
                3331
            ],
            [
                2024,
                11,
                31,
                3341
            ],
            [
                2025,
                0,
                1,
                3353
            ],
            [
                2025,
                0,
                2,
                3336
            ],
            [
                2025,
                0,
                4,
                3355
            ],
            [
                2025,
                0,
                6,
                3375
            ],
            [
                2025,
                0,
                7,
                3377
            ],
            [
                2025,
                0,
                8,
                3347
            ],
            [
                2025,
                0,
                9,
                3315
            ],
            [
                2025,
                0,
                11,
                3305
            ],
            [
                2025,
                1,
                2,
                3287
            ],
            [
                2025,
                1,
                3,
                3349
            ],
            [
                2025,
                1,
                4,
                3329
            ],
            [
                2025,
                1,
                5,
                3278
            ],
            [
                2025,
                1,
                7,
                3282
            ],
            [
                2025,
                1,
                8,
                3285
            ],
            [
                2025,
                1,
                9,
                3266
            ],
            [
                2025,
                1,
                11,
                3271
            ],
            [
                2025,
                1,
                15,
                3250
            ],
            [
                2025,
                1,
                18,
                3261
            ],
            [
                2025,
                1,
                19,
                3256
            ],
            [
                2025,
                1,
                20,
                3251
            ],
            [
                2025,
                1,
                22,
                3248
            ],
            [
                2025,
                2,
                7,
                3254
            ],
            [
                2025,
                2,
                8,
                3257
            ],
            [
                2025,
                2,
                9,
                3223
            ],
            [
                2025,
                2,
                11,
                3208
            ],
            [
                2025,
                2,
                12,
                3251
            ],
            [
                2025,
                2,
                13,
                3270
            ],
            [
                2025,
                2,
                26,
                3258
            ],
            [
                2025,
                2,
                27,
                3246
            ],
            [
                2025,
                2,
                28,
                3302
            ],
            [
                2025,
                2,
                31,
                3271
            ],
            [
                2025,
                3,
                4,
                3325
            ],
            [
                2025,
                3,
                8,
                3361
            ],
            [
                2025,
                3,
                9,
                3316
            ],
            [
                2025,
                3,
                10,
                3401
            ],
            [
                2025,
                5,
                18,
                3405
            ],
            [
                2025,
                5,
                22,
                3353
            ],
            [
                2025,
                5,
                25,
                3321
            ],
            [
                2025,
                5,
                28,
                3311
            ],
            [
                2025,
                5,
                29,
                3281
            ],
            [
                2025,
                5,
                30,
                3326
            ],
            [
                2025,
                6,
                1,
                3282
            ],
            [
                2025,
                6,
                2,
                3260
            ],
            [
                2025,
                6,
                3,
                3285
            ],
            [
                2025,
                6,
                4,
                3257
            ],
            [
                2025,
                6,
                6,
                3263
            ],
            [
                2025,
                6,
                8,
                3240
            ],
            [
                2025,
                6,
                9,
                3253
            ],
            [
                2025,
                6,
                10,
                3297
            ],
            [
                2025,
                6,
                12,
                3301
            ],
            [
                2025,
                6,
                13,
                3338
            ],
            [
                2025,
                6,
                14,
                3371
            ],
            [
                2025,
                6,
                15,
                3342
            ]
        ]
    },
    {
        "name": "Blitz",
        "points": [
            [
                2023,
                2,
                17,
                2439
            ],
            [
                2023,
                4,
                15,
                2744
            ],
            [
                2023,
                4,
                17,
                2877
            ],
            [
                2023,
                4,
                20,
                2919
            ],
            [
                2023,
                4,
                21,
                2929
            ],
            [
                2023,
                4,
                22,
                2935
            ],
            [
                2023,
                4,
                23,
                2941
            ],
            [
                2023,
                4,
                24,
                2949
            ],
            [
                2023,
                4,
                25,
                2933
            ],
            [
                2023,
                4,
                28,
                2914
            ],
            [
                2023,
                5,
                14,
                2900
            ],
            [
                2023,
                7,
                4,
                2912
            ],
            [
                2023,
                7,
                5,
                2902
            ],
            [
                2023,
                7,
                9,
                2928
            ],
            [
                2023,
                7,
                11,
                2934
            ],
            [
                2023,
                7,
                28,
                2937
            ],
            [
                2023,
                7,
                29,
                2952
            ],
            [
                2023,
                9,
                21,
                2965
            ],
            [
                2023,
                10,
                13,
                2953
            ],
            [
                2024,
                0,
                20,
                3004
            ],
            [
                2024,
                1,
                11,
                3030
            ],
            [
                2024,
                1,
                23,
                3060
            ],
            [
                2024,
                1,
                25,
                3026
            ],
            [
                2024,
                4,
                11,
                2985
            ],
            [
                2024,
                5,
                8,
                2848
            ],
            [
                2024,
                6,
                4,
                2950
            ],
            [
                2024,
                6,
                5,
                2918
            ],
            [
                2024,
                6,
                6,
                2966
            ],
            [
                2024,
                6,
                12,
                2975
            ],
            [
                2024,
                7,
                5,
                2974
            ],
            [
                2024,
                7,
                6,
                2974
            ],
            [
                2024,
                7,
                7,
                2982
            ],
            [
                2024,
                7,
                10,
                2964
            ],
            [
                2024,
                7,
                11,
                2977
            ],
            [
                2024,
                7,
                12,
                2961
            ],
            [
                2024,
                7,
                15,
                2953
            ],
            [
                2024,
                8,
                3,
                2960
            ],
            [
                2024,
                9,
                29,
                2985
            ],
            [
                2024,
                10,
                20,
                2979
            ],
            [
                2024,
                11,
                13,
                2998
            ],
            [
                2024,
                11,
                14,
                3005
            ],
            [
                2024,
                11,
                15,
                2983
            ],
            [
                2024,
                11,
                18,
                2992
            ],
            [
                2024,
                11,
                31,
                3004
            ],
            [
                2025,
                0,
                5,
                3014
            ],
            [
                2025,
                0,
                8,
                3018
            ],
            [
                2025,
                0,
                16,
                3035
            ],
            [
                2025,
                1,
                21,
                3047
            ],
            [
                2025,
                3,
                21,
                3008
            ],
            [
                2025,
                4,
                18,
                3033
            ],
            [
                2025,
                5,
                2,
                2972
            ]
        ]
    },
    {
        "name": "Rapid",
        "points": []
    },
    {
        "name": "Classical",
        "points": []
    },
    {
        "name": "Correspondence",
        "points": []
    },
    {
        "name": "Chess960",
        "points": [
            [
                2024,
                5,
                18,
                2446
            ],
            [
                2024,
                5,
                26,
                2553
            ],
            [
                2025,
                3,
                5,
                2416
            ]
        ]
    },
    {
        "name": "King of the Hill",
        "points": [
            [
                2024,
                6,
                6,
                2491
            ],
            [
                2024,
                8,
                3,
                2625
            ]
        ]
    },
    {
        "name": "Three-check",
        "points": []
    },
    {
        "name": "Antichess",
        "points": []
    },
    {
        "name": "Atomic",
        "points": []
    },
    {
        "name": "Horde",
        "points": []
    },
    {
        "name": "Racing Kings",
        "points": []
    },
    {
        "name": "Crazyhouse",
        "points": [
            [
                2024,
                7,
                23,
                1808
            ],
            [
                2024,
                9,
                7,
                1937
            ]
        ]
    },
    {
        "name": "Puzzles",
        "points": [
            [
                2023,
                2,
                17,
                2617
            ],
            [
                2023,
                2,
                21,
                2621
            ],
            [
                2023,
                2,
                22,
                2625
            ],
            [
                2023,
                2,
                23,
                2626
            ],
            [
                2023,
                2,
                29,
                2632
            ],
            [
                2023,
                2,
                30,
                2642
            ],
            [
                2023,
                3,
                16,
                2644
            ],
            [
                2023,
                3,
                18,
                2648
            ],
            [
                2023,
                3,
                28,
                2495
            ],
            [
                2023,
                4,
                12,
                2499
            ],
            [
                2023,
                4,
                19,
                2508
            ],
            [
                2023,
                4,
                21,
                2512
            ],
            [
                2023,
                4,
                25,
                2365
            ],
            [
                2023,
                5,
                12,
                2386
            ],
            [
                2023,
                5,
                16,
                2400
            ],
            [
                2023,
                5,
                21,
                2405
            ],
            [
                2023,
                5,
                23,
                2422
            ],
            [
                2023,
                5,
                24,
                2306
            ],
            [
                2023,
                5,
                26,
                2314
            ],
            [
                2023,
                6,
                21,
                2340
            ],
            [
                2023,
                7,
                3,
                2346
            ],
            [
                2023,
                7,
                5,
                2354
            ],
            [
                2023,
                7,
                28,
                2371
            ],
            [
                2023,
                7,
                31,
                2387
            ],
            [
                2023,
                8,
                6,
                2650
            ],
            [
                2023,
                8,
                10,
                2652
            ],
            [
                2023,
                8,
                12,
                2652
            ],
            [
                2023,
                8,
                17,
                2653
            ],
            [
                2023,
                10,
                8,
                2654
            ],
            [
                2023,
                10,
                16,
                2655
            ],
            [
                2023,
                10,
                19,
                2656
            ],
            [
                2023,
                10,
                21,
                2657
            ],
            [
                2023,
                11,
                10,
                2658
            ],
            [
                2024,
                0,
                20,
                2659
            ],
            [
                2024,
                0,
                25,
                2661
            ],
            [
                2024,
                0,
                28,
                2662
            ],
            [
                2024,
                1,
                3,
                2663
            ],
            [
                2024,
                1,
                8,
                2664
            ],
            [
                2024,
                2,
                11,
                2665
            ],
            [
                2024,
                2,
                30,
                2667
            ],
            [
                2024,
                3,
                7,
                2753
            ],
            [
                2024,
                3,
                10,
                2754
            ],
            [
                2024,
                4,
                6,
                2755
            ],
            [
                2024,
                5,
                5,
                2756
            ],
            [
                2024,
                5,
                8,
                2757
            ],
            [
                2024,
                5,
                12,
                2758
            ],
            [
                2024,
                6,
                12,
                2760
            ],
            [
                2024,
                6,
                26,
                2677
            ],
            [
                2024,
                7,
                7,
                2680
            ],
            [
                2024,
                7,
                9,
                2682
            ],
            [
                2024,
                7,
                12,
                2689
            ],
            [
                2024,
                7,
                14,
                2691
            ],
            [
                2024,
                7,
                15,
                2694
            ],
            [
                2024,
                8,
                3,
                2698
            ],
            [
                2024,
                9,
                13,
                2669
            ],
            [
                2024,
                9,
                14,
                2670
            ],
            [
                2024,
                9,
                22,
                2670
            ],
            [
                2024,
                9,
                30,
                2673
            ],
            [
                2024,
                10,
                5,
                2673
            ],
            [
                2024,
                10,
                28,
                2677
            ],
            [
                2024,
                11,
                10,
                2680
            ],
            [
                2024,
                11,
                13,
                2681
            ],
            [
                2024,
                11,
                14,
                2682
            ],
            [
                2024,
                11,
                18,
                2683
            ],
            [
                2025,
                0,
                5,
                2580
            ],
            [
                2025,
                0,
                14,
                2582
            ],
            [
                2025,
                0,
                15,
                2585
            ],
            [
                2025,
                1,
                4,
                2592
            ],
            [
                2025,
                1,
                8,
                2595
            ],
            [
                2025,
                1,
                14,
                2597
            ],
            [
                2025,
                2,
                13,
                2599
            ],
            [
                2025,
                2,
                19,
                2599
            ],
            [
                2025,
                2,
                28,
                2607
            ],
            [
                2025,
                5,
                2,
                2609
            ],
            [
                2025,
                6,
                6,
                2618
            ]
        ]
    },
    {
        "name": "UltraBullet",
        "points": [
            [
                2023,
                2,
                15,
                2301
            ],
            [
                2023,
                2,
                25,
                2253
            ],
            [
                2023,
                2,
                29,
                2385
            ],
            [
                2023,
                2,
                30,
                2363
            ],
            [
                2023,
                3,
                3,
                2380
            ],
            [
                2023,
                3,
                16,
                2400
            ],
            [
                2023,
                3,
                20,
                2399
            ],
            [
                2023,
                4,
                9,
                2404
            ],
            [
                2023,
                4,
                10,
                2455
            ],
            [
                2023,
                5,
                16,
                2464
            ],
            [
                2023,
                5,
                18,
                2484
            ],
            [
                2023,
                5,
                20,
                2484
            ],
            [
                2023,
                6,
                21,
                2500
            ],
            [
                2023,
                6,
                23,
                2519
            ],
            [
                2023,
                6,
                24,
                2533
            ],
            [
                2023,
                7,
                3,
                2577
            ],
            [
                2023,
                7,
                4,
                2549
            ],
            [
                2023,
                7,
                5,
                2543
            ],
            [
                2023,
                7,
                7,
                2548
            ],
            [
                2023,
                7,
                20,
                2503
            ],
            [
                2023,
                7,
                22,
                2484
            ],
            [
                2023,
                7,
                27,
                2471
            ],
            [
                2023,
                7,
                30,
                2465
            ],
            [
                2023,
                8,
                2,
                2483
            ],
            [
                2023,
                8,
                3,
                2475
            ],
            [
                2023,
                8,
                5,
                2455
            ],
            [
                2023,
                8,
                9,
                2435
            ],
            [
                2023,
                8,
                27,
                2398
            ],
            [
                2023,
                10,
                7,
                2410
            ],
            [
                2023,
                10,
                11,
                2427
            ],
            [
                2023,
                10,
                12,
                2428
            ],
            [
                2023,
                10,
                15,
                2460
            ],
            [
                2023,
                10,
                16,
                2502
            ],
            [
                2023,
                10,
                18,
                2500
            ],
            [
                2023,
                10,
                19,
                2509
            ],
            [
                2023,
                10,
                20,
                2406
            ],
            [
                2023,
                10,
                21,
                2397
            ],
            [
                2023,
                11,
                18,
                2431
            ],
            [
                2023,
                11,
                24,
                2440
            ],
            [
                2023,
                11,
                31,
                2431
            ],
            [
                2024,
                0,
                13,
                2394
            ],
            [
                2024,
                0,
                14,
                2393
            ],
            [
                2024,
                0,
                17,
                2455
            ],
            [
                2024,
                0,
                18,
                2456
            ],
            [
                2024,
                0,
                19,
                2467
            ],
            [
                2024,
                0,
                20,
                2482
            ],
            [
                2024,
                0,
                21,
                2507
            ],
            [
                2024,
                0,
                22,
                2510
            ],
            [
                2024,
                0,
                23,
                2493
            ],
            [
                2024,
                0,
                24,
                2501
            ],
            [
                2024,
                0,
                25,
                2480
            ],
            [
                2024,
                0,
                26,
                2471
            ],
            [
                2024,
                0,
                27,
                2465
            ],
            [
                2024,
                0,
                28,
                2502
            ],
            [
                2024,
                2,
                9,
                2500
            ],
            [
                2024,
                2,
                10,
                2464
            ],
            [
                2024,
                2,
                28,
                2501
            ],
            [
                2024,
                2,
                30,
                2542
            ],
            [
                2024,
                2,
                31,
                2547
            ],
            [
                2024,
                3,
                1,
                2515
            ],
            [
                2024,
                3,
                5,
                2509
            ],
            [
                2024,
                3,
                6,
                2491
            ],
            [
                2024,
                3,
                7,
                2502
            ],
            [
                2024,
                3,
                8,
                2529
            ],
            [
                2024,
                3,
                9,
                2550
            ],
            [
                2024,
                3,
                10,
                2536
            ],
            [
                2024,
                3,
                13,
                2540
            ],
            [
                2024,
                3,
                19,
                2516
            ],
            [
                2024,
                3,
                22,
                2503
            ],
            [
                2024,
                3,
                23,
                2493
            ],
            [
                2024,
                4,
                6,
                2521
            ],
            [
                2024,
                4,
                8,
                2538
            ],
            [
                2024,
                4,
                25,
                2600
            ],
            [
                2024,
                4,
                27,
                2561
            ],
            [
                2024,
                5,
                2,
                2546
            ],
            [
                2024,
                5,
                7,
                2539
            ],
            [
                2024,
                5,
                11,
                2526
            ],
            [
                2024,
                5,
                18,
                2541
            ],
            [
                2024,
                5,
                26,
                2530
            ],
            [
                2024,
                5,
                27,
                2490
            ],
            [
                2024,
                5,
                30,
                2503
            ],
            [
                2024,
                6,
                6,
                2510
            ],
            [
                2024,
                6,
                9,
                2496
            ],
            [
                2024,
                6,
                10,
                2500
            ],
            [
                2024,
                6,
                12,
                2493
            ],
            [
                2024,
                6,
                17,
                2496
            ],
            [
                2024,
                6,
                22,
                2484
            ],
            [
                2024,
                6,
                23,
                2487
            ],
            [
                2024,
                6,
                27,
                2500
            ],
            [
                2024,
                6,
                30,
                2487
            ],
            [
                2024,
                7,
                5,
                2475
            ],
            [
                2024,
                7,
                6,
                2469
            ],
            [
                2024,
                7,
                7,
                2518
            ],
            [
                2024,
                7,
                8,
                2554
            ],
            [
                2024,
                7,
                10,
                2532
            ],
            [
                2024,
                7,
                14,
                2529
            ],
            [
                2024,
                7,
                15,
                2601
            ],
            [
                2024,
                7,
                19,
                2594
            ],
            [
                2024,
                7,
                20,
                2570
            ],
            [
                2024,
                7,
                21,
                2549
            ],
            [
                2024,
                7,
                24,
                2546
            ],
            [
                2024,
                7,
                26,
                2547
            ],
            [
                2024,
                7,
                27,
                2525
            ],
            [
                2024,
                7,
                29,
                2522
            ],
            [
                2024,
                7,
                30,
                2478
            ],
            [
                2024,
                8,
                1,
                2472
            ],
            [
                2024,
                8,
                3,
                2475
            ],
            [
                2024,
                8,
                4,
                2500
            ],
            [
                2024,
                8,
                8,
                2507
            ],
            [
                2024,
                8,
                9,
                2514
            ],
            [
                2024,
                8,
                22,
                2515
            ],
            [
                2024,
                8,
                23,
                2521
            ],
            [
                2024,
                8,
                24,
                2508
            ],
            [
                2024,
                9,
                1,
                2504
            ],
            [
                2024,
                9,
                4,
                2520
            ],
            [
                2024,
                9,
                5,
                2507
            ],
            [
                2024,
                9,
                7,
                2469
            ],
            [
                2024,
                9,
                13,
                2401
            ],
            [
                2024,
                9,
                29,
                2532
            ],
            [
                2024,
                10,
                19,
                2467
            ],
            [
                2024,
                10,
                21,
                2458
            ],
            [
                2024,
                10,
                23,
                2450
            ],
            [
                2024,
                10,
                28,
                2433
            ],
            [
                2024,
                11,
                11,
                2428
            ],
            [
                2024,
                11,
                14,
                2488
            ],
            [
                2024,
                11,
                15,
                2519
            ],
            [
                2024,
                11,
                22,
                2522
            ],
            [
                2024,
                11,
                23,
                2554
            ],
            [
                2024,
                11,
                29,
                2534
            ],
            [
                2024,
                11,
                30,
                2518
            ],
            [
                2025,
                0,
                1,
                2524
            ],
            [
                2025,
                2,
                26,
                2536
            ],
            [
                2025,
                2,
                27,
                2472
            ],
            [
                2025,
                3,
                4,
                2600
            ],
            [
                2025,
                3,
                6,
                2657
            ],
            [
                2025,
                3,
                10,
                2611
            ],
            [
                2025,
                6,
                1,
                2664
            ]
        ]
    }
]
</file>

<file path="test/mocks/top10.json">
{
    "bullet": [
        {
            "id": "ediz_gurel",
            "username": "Ediz_Gurel",
            "perfs": {
                "bullet": {
                    "rating": 3371,
                    "progress": 21
                }
            },
            "title": "GM",
            "patron": true
        },
        {
            "id": "chess-art-us",
            "username": "chess-art-us",
            "perfs": {
                "bullet": {
                    "rating": 3266,
                    "progress": 14
                }
            },
            "title": "IM"
        },
        {
            "id": "heisenberg01",
            "username": "Heisenberg01",
            "perfs": {
                "bullet": {
                    "rating": 3235,
                    "progress": 26
                }
            },
            "title": "FM"
        },
        {
            "id": "muisback",
            "username": "muisback",
            "perfs": {
                "bullet": {
                    "rating": 3229,
                    "progress": -3
                }
            },
            "title": "GM",
            "patron": true
        },
        {
            "id": "jaggust01",
            "username": "Jaggust01",
            "perfs": {
                "bullet": {
                    "rating": 3216,
                    "progress": 6
                }
            },
            "title": "IM",
            "online": true
        },
        {
            "id": "kelfero",
            "username": "KelFero",
            "perfs": {
                "bullet": {
                    "rating": 3204,
                    "progress": 19
                }
            },
            "patron": true
        },
        {
            "id": "jessica_rabbitt",
            "username": "Jessica_Rabbitt",
            "perfs": {
                "bullet": {
                    "rating": 3202,
                    "progress": -41
                }
            }
        },
        {
            "id": "ekizzz",
            "username": "ekizzz",
            "perfs": {
                "bullet": {
                    "rating": 3201,
                    "progress": 12
                }
            }
        },
        {
            "id": "chessed70",
            "username": "chessed70",
            "perfs": {
                "bullet": {
                    "rating": 3183,
                    "progress": 26
                }
            }
        },
        {
            "id": "willzeitnot",
            "username": "WillZeitnot",
            "perfs": {
                "bullet": {
                    "rating": 3178,
                    "progress": 8
                }
            },
            "title": "NM"
        }
    ],
    "blitz": [
        {
            "id": "athena-pallada",
            "username": "athena-pallada",
            "perfs": {
                "blitz": {
                    "rating": 3052,
                    "progress": 18
                }
            },
            "title": "GM"
        },
        {
            "id": "iammatecheckmate",
            "username": "IAmMateCheckMate",
            "perfs": {
                "blitz": {
                    "rating": 3031,
                    "progress": 8
                }
            }
        },
        {
            "id": "dr_tiger",
            "username": "Dr_Tiger",
            "perfs": {
                "blitz": {
                    "rating": 3014,
                    "progress": 2
                }
            },
            "title": "GM",
            "online": true
        },
        {
            "id": "aspiringstar",
            "username": "aspiringstar",
            "perfs": {
                "blitz": {
                    "rating": 3011,
                    "progress": 27
                }
            },
            "title": "GM"
        },
        {
            "id": "coffeechessclub2023",
            "username": "coffeechessclub2023",
            "perfs": {
                "blitz": {
                    "rating": 3009,
                    "progress": 21
                }
            }
        },
        {
            "id": "doughnut42",
            "username": "doughnut42",
            "perfs": {
                "blitz": {
                    "rating": 3003,
                    "progress": -6
                }
            }
        },
        {
            "id": "sportik_shark",
            "username": "Sportik_Shark",
            "perfs": {
                "blitz": {
                    "rating": 2993,
                    "progress": 13
                }
            },
            "title": "IM"
        },
        {
            "id": "fran4477",
            "username": "Fran4477",
            "perfs": {
                "blitz": {
                    "rating": 2989,
                    "progress": 11
                }
            }
        },
        {
            "id": "yarebore",
            "username": "Yarebore",
            "perfs": {
                "blitz": {
                    "rating": 2988,
                    "progress": 10
                }
            },
            "title": "GM"
        },
        {
            "id": "faustioro",
            "username": "FaustiOro",
                "perfs": {
                "blitz": {
                    "rating": 2960,
                    "progress": 24
                }
            },
            "title": "IM"
        }
    ]
}
</file>

<file path="test/mocks/topPlayerOfBulletGames.json">
{
    "users": [
        {
            "id": "ediz_gurel",
            "username": "Ediz_Gurel",
            "perfs": {
                "bullet": {
                    "rating": 3342,
                    "progress": 20
                }
            },
            "title": "GM",
            "patron": true
        }
    ]
}
</file>

<file path="test/mocks/user.json">
{
    "id": "thibault",
    "username": "thibault",
    "playTime": {
        "total": 6408249,
        "tv": 17974
    },
    "perfs": {
        "ultraBullet": {
            "games": 3,
            "rating": 1688,
            "rd": 348,
            "prog": 0,
            "prov": true
        },
        "bullet": {
            "games": 7470,
            "rating": 1778,
            "rd": 76,
            "prog": -26
        },
        "blitz": {
            "games": 11470,
            "rating": 1726,
            "rd": 53,
            "prog": 2
        },
        "rapid": {
            "games": 873,
            "rating": 1746,
            "rd": 125,
            "prog": -71,
            "prov": true
        },
        "classical": {
            "games": 24,
            "rating": 1806,
            "rd": 242,
            "prog": -5,
            "prov": true
        },
        "correspondence": {
            "games": 377,
            "rating": 1942,
            "rd": 142,
            "prog": -12,
            "prov": true
        },
        "chess960": {
            "games": 348,
            "rating": 1551,
            "rd": 251,
            "prog": 61,
            "prov": true
        },
        "kingOfTheHill": {
            "games": 94,
            "rating": 1744,
            "rd": 272,
            "prog": 14,
            "prov": true
        },
        "threeCheck": {
            "games": 66,
            "rating": 1728,
            "rd": 243,
            "prog": 132,
            "prov": true
        },
        "antichess": {
            "games": 72,
            "rating": 1512,
            "rd": 269,
            "prog": -20,
            "prov": true
        },
        "atomic": {
            "games": 99,
            "rating": 1633,
            "rd": 285,
            "prog": 18,
            "prov": true
        },
        "horde": {
            "games": 46,
            "rating": 1592,
            "rd": 265,
            "prog": -20,
            "prov": true
        },
        "racingKings": {
            "games": 13,
            "rating": 1552,
            "rd": 318,
            "prog": -75,
            "prov": true
        },
        "crazyhouse": {
            "games": 50,
            "rating": 1567,
            "rd": 283,
            "prog": -34,
            "prov": true
        },
        "puzzle": {
            "games": 5659,
            "rating": 1940,
            "rd": 82,
            "prog": 0
        },
        "storm": {
            "runs": 44,
            "score": 33
        },
        "racer": {
            "runs": 80,
            "score": 51
        },
        "streak": {
            "runs": 48,
            "score": 33
        }
    },
    "flair": "nature.seedling",
    "patron": true,
    "verified": true,
    "createdAt": 1290415680000,
    "profile": {
        "bio": "I turn coffee into bugs.",
        "realName": "Thibault Duplessis",
        "links": "github.com/ornicar\r\nmas.to/@thibault"
    },
    "seenAt": 1752475985759
}
</file>

<file path=".gitignore">
node_modules/
dist/
.env
</file>

<file path="jest.config.js">
const { createDefaultPreset } = require("ts-jest");

const tsJestTransformCfg = createDefaultPreset().transform;

/** @type {import("jest").Config} **/
module.exports = {
  testEnvironment: "node",
  transform: {
    ...tsJestTransformCfg,
  },
};
</file>

<file path="test/endpoints/E2E/enriched.e2e.spec.ts">
import app from '../../../src/index';
import supertest from 'supertest';
import nock from 'nock';
import mockLichessUserData from '../../mocks/user.json'; 
import mockLichessEnrichedData from '../../mocks/enrichedUserPerformance.json'; 

describe('Top10 E2E tests', () => { 
  let request: any;
  const lichessApiScope = nock('https://lichess.org');
  const userId = 'thibault';
  const mode = 'blitz';

  beforeAll(async () => {
    await app.ready();
    request = supertest(app.server as any);
  });

  afterEach(() => {
    nock.cleanAll();
  });

  afterAll(async () => {
    await app.close();
    nock.restore();
  });

  it('Returns 200 with the enriched data if the external API succeeds', async () => {
    lichessApiScope.get(`/api/user/${userId}`).reply(200, mockLichessUserData);
    lichessApiScope.get(`/api/user/${userId}/perf/${mode}`).reply(200, mockLichessEnrichedData);

    const response = await request.get(`/chess/enriched?id=${userId}&mode=${mode}`);
    
    expect(response.statusCode).toBe(200);

    const body = response.body;
    expect(body.id).toBe(userId);
    expect(body.username).toBe('thibault');
    expect(body.profile.bio).toBe('I turn coffee into bugs.');
    expect(body.playTime.total).toBe(6408249);
    expect(body.rank).toBe(null);
    expect(body.resultStreak.wins.current).toBe(1);
    expect(body.resultStreak.wins.max).toBe(11);
    expect(body.resultStreak.losses.current).toBe(0);
    expect(body.resultStreak.losses.max).toBe(19);

    expect(nock.isDone()).toBe(true);
  });

  it('Returns 500 if the external Lichess API fails at first request', async () => {
    lichessApiScope.get(`/api/user/${userId}`).reply(500, { error: 'Server Error' });
    lichessApiScope.get(`/api/user/${userId}/perf/${mode}`).reply(200, mockLichessEnrichedData);
    
    const response = await request.get(`/chess/enriched?id=${userId}&mode=${mode}`);
    
  });

  it('Returns 500 if the external Lichess API fails at second request', async () => {
    lichessApiScope.get(`/api/user/${userId}`).reply(200, mockLichessUserData);
    lichessApiScope.get(`/api/user/${userId}/perf/${mode}`).reply(500, { error: 'Server Error' });

    const response = await request.get(`/chess/enriched?id=${userId}&mode=${mode}`);
    
    expect(response.statusCode).toBe(500);
    expect(response.body).toEqual({ error: 'Internal server error.' });
  });
});
</file>

<file path="test/endpoints/E2E/top10.e2e.spec.ts">
import app from '../../../src/index';
import supertest from 'supertest';
import nock from 'nock';
import mockLichessData from '../../mocks/top10.json'; 

describe('Top10 E2E tests', () => { 
  let request: any;
  const lichessApiScope = nock('https://lichess.org');

  beforeAll(async () => {
    await app.ready();
    request = supertest(app.server as any);
  });

  afterEach(() => {
    nock.cleanAll();
  });

  afterAll(async () => {
    await app.close();
    nock.restore();
  });

  it('should return 200 with a structured list of top players', async () => {
    lichessApiScope.get('/api/player').reply(200, mockLichessData);
    const response = await request.get('/chess/top10');

    expect(response.statusCode).toBe(200);
    
    const body = response.body;
    expect(body).toHaveProperty('bullet');

    const firstBulletPlayer = body.bullet[0];
    expect(firstBulletPlayer.id).toBe('ediz_gurel');
    expect(firstBulletPlayer).not.toHaveProperty('perfs');
    expect(firstBulletPlayer).toHaveProperty('modes');
    expect(firstBulletPlayer.modes.bullet.rating).toBe(3371);

    const secondBlitzPlayer = body.blitz[1];
    expect(secondBlitzPlayer.id).toBe('iammatecheckmate');
    expect(secondBlitzPlayer.modes.blitz.rating).toBe(3031);

    const thirdBulletPlayer = body.bullet[2];
    expect(thirdBulletPlayer.id).toBe('heisenberg01');
    expect(thirdBulletPlayer.modes.bullet.rating).toBe(3235);
    expect(thirdBulletPlayer.modes.bullet.progress).toBe(26);
    expect(thirdBulletPlayer.title).toBe('FM');


    expect(nock.isDone()).toBe(true); 
  });

  it('should return 500 if the external API fails', async () => {
    lichessApiScope.get('/api/player').reply(500, { error: 'Server Error' });

    const response = await request.get('/chess/top10');
    
    expect(response.statusCode).toBe(500);
    expect(response.body).toEqual({ error: 'Internal server error.' });
    expect(nock.isDone()).toBe(true);
  });
});
</file>

<file path="test/endpoints/integration/enriched.integration.spec.ts">
jest.mock('axios');

import axios, { AxiosError } from 'axios';
import app from '../../../src/index';

const mockedAxios = axios as jest.Mocked<typeof axios>;

describe('Enriched integration tests', () => {
  beforeAll(async () => {
    await app.ready();
  });

  afterAll(async () => {
    await app.close();
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  it('Returns enriched data if both axios calls succeed', async () => {
    const mockUserData = {
      id: 'thibault',
      username: 'thibault',
      profile: {
        bio: 'I turn coffee into bugs.',
        realName: 'Thibault Duplessis',
        links: 'github.com/ornicar\r\nmas.to/@thibault'
      },
      playTime: {
        total: 6408249,
        tv: 17974
      }
    };

    const mockPerfData = {
      rank: null,
      stat: {
        resultStreak: {
          win: { cur: { v: 0 }, max: { v: 16 } },
          loss: { cur: { v: 1 }, max: { v: 14 } }
        }
      }
    };

    mockedAxios.get.mockResolvedValueOnce({ data: mockUserData });
    mockedAxios.get.mockResolvedValueOnce({ data: mockPerfData });

    const response = await app.inject({
      method: 'GET',
      url: '/chess/enriched?id=thibault&mode=blitz'
    });

    expect(response.statusCode).toBe(200);
    expect(response.json()).toEqual({
      id: 'thibault',
      username: 'thibault',
      profile: {
        bio: 'I turn coffee into bugs.',
        realName: 'Thibault Duplessis',
        links: 'github.com/ornicar\r\nmas.to/@thibault'
      },
      playTime: {
        total: 6408249,
        tv: 17974
      },
      rank: null,
      resultStreak: {
        wins: {
          current: 0,
          max: 16
        },
        losses: {
          current: 1,
          max: 14
        }
      }
    });
  });

  it('Returns 400 if mode is missing', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/enriched?id=thibault'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'id' or 'mode' parameter." });
  });

  it('Returns 400 if id is missing', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/enriched?mode=blitz'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'id' or 'mode' parameter." });
  });

  it('Returns 404 if user is not found', async () => {
    const error404 = Object.assign(new Error('Not Found'), {
      isAxiosError: true,
      response: { status: 404 }
    }) as AxiosError;

    mockedAxios.get.mockRejectedValueOnce(error404);

    const response = await app.inject({
      method: 'GET',
      url: '/chess/enriched?id=this_is_not_a_user&mode=blitz'
    });

    expect(response.statusCode).toBe(404);
    expect(response.json()).toEqual({ error: "User or Game Mode not found." });
  });

  it('Returns 404 if mode is not found', async () => {
    const error404 = Object.assign(new Error('Not Found'), {
      isAxiosError: true,
      response: { status: 404 }
    }) as AxiosError;

    mockedAxios.get.mockResolvedValueOnce({ data: { username: 'thibault' } });
    mockedAxios.get.mockRejectedValueOnce(error404);

    const response = await app.inject({
      method: 'GET',
      url: '/chess/enriched?id=thibault&mode=this_is_not_a_mode'
    });

    expect(response.statusCode).toBe(404);
    expect(response.json()).toEqual({ error: "User or Game Mode not found." });
  });
});
</file>

<file path="test/endpoints/integration/user.integration.spec.ts">
jest.mock('axios');

import axios, { AxiosError } from 'axios';
import app from '../../../src/index';
const mockedAxios = axios as jest.Mocked<typeof axios>;

describe('User integration tests', () => {
  beforeAll(async () => {
    await app.ready();
  });

  afterAll(async () => {
    await app.close();
  });

  it('Returns data with perfs renamed to modes if axios succeeds', async () => {
    const auxData = {
      games: 3,
      rating: 1688,
      rd: 348,
      prog: 0,
      prov: true
    };
    const data = {
      id: 'thibault',
      username: 'thibault',
      playTime: { total: 1000, tv: 10 },
      perfs: {
        ultrabullet: auxData,
        bullet: auxData,
        blitz: auxData
      }
    };
    const expectedData = {
      id: 'thibault',
      username: 'thibault',
      playTime: { total: 1000, tv: 10 },
      modes: {
        ultrabullet: auxData,
        bullet: auxData,
        blitz: auxData
      }
    };
    mockedAxios.get.mockResolvedValueOnce({ data });

    const response = await app.inject({
      method: 'GET',
      url: '/chess/user?id=thibault'
    });

    expect(response.statusCode).toBe(200);
    expect(response.json()).toEqual(expectedData);
  });

  it('Returns 400 if id is missing', async () => {
    const response = await app.inject({
      method: 'GET',
      url: '/chess/user'
    });
    expect(response.statusCode).toBe(400);
    expect(response.json()).toEqual({ error: "Invalid or missing 'id' parameter." });
  });

  it('Returns 404 if user is not found', async () => {
    const error404 = Object.assign(new Error('Not Found'), {
      isAxiosError: true,
      response: { status: 404 }
    }) as AxiosError;

    mockedAxios.get.mockRejectedValueOnce(error404);

    const response = await app.inject({
      method: 'GET',
      url: '/chess/user?id=this_is_not_a_user'
    });

    expect(response.statusCode).toBe(404);
    expect(response.json()).toEqual({ error: "User not found." });
  });


});
</file>

<file path="tsconfig.json">
{
  "compilerOptions": {
    "target": "es2016",
    "module": "commonjs",
    "outDir": "./dist",
    "rootDir": "./src",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "skipLibCheck": true,
    "resolveJsonModule": true
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}
</file>

<file path="test/endpoints/E2E/user.e2e.spec.ts">
import app from '../../../src/index';
import supertest from 'supertest';
import nock from 'nock';
import mockLichessUserData from '../../mocks/user.json';

describe('User E2E tests', () => { 
  let request: any;
  const lichessApiScope = nock('https://lichess.org');
  const userId = 'thibault';

  
  beforeAll(async () => {
    await app.ready();
    request = supertest(app.server as any);
  });

  afterEach(() => {
    nock.cleanAll();
  });

  afterAll(async () => {
    await app.close();
    nock.restore();
  });
    
  it('Returns 200 and complete user info for a valid user id', async () => {
    lichessApiScope.get(`/api/user/${userId}`).reply(200, mockLichessUserData);
    const response = await request.get(`/chess/user?id=${userId}`);
    expect(response.statusCode).toBe(200);

    const body = response.body;
    expect(body.id).toBe(userId);
    expect(body.username).toBe('thibault');
    expect(body.playTime.total).toBe(6408249);
    expect(body.playTime.tv).toBe(17974);

    expect(body).not.toHaveProperty('perfs');
    expect(body).toHaveProperty('modes');

    expect(body.modes.blitz.games).toBe(11470);
    expect(body.modes.puzzle.rating).toBe(1940);
    expect(body.modes.classical.rd).toBe(242);
    expect(body.modes.bullet.prog).toBe(-26);
    expect(body.modes.ultraBullet.prov).toBe(true);

    expect(body.profile.bio).toBe('I turn coffee into bugs.');
    expect(body.profile.realName).toBe('Thibault Duplessis');
    expect(body.profile.links).toBe('github.com/ornicar\r\nmas.to/@thibault');
    expect(body.flair).toBe('nature.seedling');
    expect(body.patron).toBe(true);
    expect(body.verified).toBe(true);
    expect(body.createdAt).toBe(1290415680000);
    expect(body.seenAt).toBe(1752475985759);

    expect(nock.isDone()).toBe(true);
  });

  it('Returns 500 if the external Lichess API fails', async () => {
    lichessApiScope.get(`/api/user/${userId}`).reply(500, { error: 'Internal server error.' });

    const response = await request.get(`/chess/user?id=${userId}`);
    
    expect(response.statusCode).toBe(500);
    expect(response.body).toEqual({ error: 'Internal server error.' });
  });
});
</file>

<file path="package.json">
{
  "name": "chess-analytics",
  "version": "1.0.0",
  "description": "",
  "main": "dist/index.js",
  "scripts": {
    "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
    "build": "tsc",
    "start": "node dist/index.js",
    "test": "jest"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "@types/node": "^24.0.12",
    "@types/supertest": "^6.0.3",
    "jest": "^30.0.4",
    "nock": "^14.0.5",
    "supertest": "^7.1.3",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@fastify/swagger": "^9.5.1",
    "@fastify/swagger-ui": "^5.2.3",
    "axios": "^1.6.8",
    "fastify": "^5.4.0"
  }
}
</file>

<file path="src/index.ts">
import Fastify from 'fastify';
import swagger from '@fastify/swagger';
import swaggerUI from '@fastify/swagger-ui';

import top10 from './endpoints/top10';
import users from './endpoints/user';
import enriched from './endpoints/enriched';
import topPlayerHistory from './endpoints/topPlayerHistory';

const fastify = Fastify({ logger: process.env.NODE_ENV !== 'test' });

registerSwagger();
registerSwaggerUI();
registerRoutes();

export default fastify;

if (require.main === module) {
  const PORT = 3000;

  const start = async () => {
    try {
      await fastify.listen({ port: PORT, host: '0.0.0.0' });
      console.log(`Server is running on http://localhost:${PORT}`);
    } catch (err) {
      fastify.log.error(err);
      process.exit(1);
    }
  };
  start();
}

function registerSwagger(){
  fastify.register(swagger, {
    swagger: {
      info: {
        title: 'Chess-Analytics',
        version: '1.0.0',
      },
    },
  });
}

function registerSwaggerUI(){
  fastify.register(swaggerUI, {
    routePrefix: '/docs',
    uiConfig: {
      docExpansion: 'full',
      deepLinking: false
    },
    staticCSP: true,
    transformSpecification: (swaggerObject, request, reply) => {
      return swaggerObject;
    },
    transformSpecificationClone: true
  });
}

function registerRoutes(){
  fastify.register(top10);
  fastify.register(users);
  fastify.register(enriched);
  fastify.register(topPlayerHistory);
}
</file>

<file path="src/utils/schemas.ts">
const errorSchema = {
    type: 'object',
    properties: {
      error: { type: 'string' }
    },
    required: ['error']
  };

  export const top10Schema = {
    200: {
      type: 'object',
      additionalProperties: {
        type: 'array',
        items: {
          type: 'object',
          properties: {
            id: { type: 'string' },
            username: { type: 'string' },
            title: { type: 'string', nullable: true },
            patron: { type: 'boolean', nullable: true },
            online: { type: 'boolean', nullable: true },
            modes: {
              type: 'object',
              additionalProperties: {
                type: 'object',
                properties: {
                  rating: { type: 'number' },
                  progress: { type: 'number' }
                },
                required: ['rating', 'progress']
              }
            }
          },
          required: ['id', 'username', 'modes']
        }
      }
    },
    500: errorSchema
};

export const userSchema = {
  200: {
    type: 'object',
    properties: {
      id: { type: 'string' },
      username: { type: 'string' },
      playTime: {
        type: 'object',
        properties: {
          total: { type: 'number' },
          tv: { type: 'number' }
        },
        required: ['total', 'tv']
      },
      modes: {
        type: 'object',
        additionalProperties: {
          type: 'object',
          properties: {
            games: { type: 'number', nullable: true },
            runs: { type: 'number', nullable: true },
            score: { type: 'number', nullable: true },
            rating: { type: 'number', nullable: true },
            rd: { type: 'number', nullable: true },
            prog: { type: 'number', nullable: true },
            prov: { type: 'boolean', nullable: true }
          }
        }
      },
      flair: { type: 'string' },
      patron: { type: 'boolean' },
      verified: { type: 'boolean' },
      createdAt: { type: 'number' },
      profile: {
        type: 'object',
        properties: {
          bio: { type: 'string', nullable: true },
          realName: { type: 'string', nullable: true },
          links: { type: 'string', nullable: true }
        },
        required: []
      },
      seenAt: { type: 'number' }
    },
    required: ['id', 'username', 'playTime']
  },
  400: errorSchema,
  404: errorSchema,
  500: errorSchema
};

export const enrichedSchema = {
    200: {
        type: 'object',
        properties: {
            id: { type: 'string' },
            username: { type: 'string' },
            profile: {
              type: 'object',
              properties: {
                bio: { type: 'string', nullable: true },
                realName: { type: 'string', nullable: true },
                links: { type: 'string', nullable: true }
              },
            },
            playTime: {
              type: 'object',
              properties: {
                total: { type: 'number' },
                tv: { type: 'number' }
              },
              required: ['total', 'tv']
            },
            rank: { type: ['number', 'null'] },
            resultStreak: {
              type: 'object',
              properties: {
                wins: {
                  type: 'object',
                  properties: {
                    current: { type: 'number' },
                    max: { type: 'number' }
                  },
                  required: ['current', 'max']
                },
                losses: {
                  type: 'object',
                  properties: {
                    current: { type: 'number' },
                    max: { type: 'number' }
                  },
                  required: ['current', 'max']
                }
              },
              required: ['wins', 'losses']
            }
          },
        },
    400: errorSchema,
    404: errorSchema,
    500: errorSchema
}
export const topPlayerHistorySchema = {
    200: {
        type: 'object',
        properties: {
          username: { type: 'string' },
          history: {
            type: 'array',
            items: {
              type: 'object',
              properties: {
                date: { type: 'string' },
                rating: { type: 'number' }
              },
              required: ['date', 'rating']
            }
          }
        },
        required: ['username', 'history']
      },
      400: errorSchema,
      404: errorSchema,
      500: errorSchema
}
</file>

<file path="src/endpoints/enriched.ts">
import { FastifyInstance, FastifyPluginOptions } from "fastify";
import axios from "axios";
import { enrichedSchema } from "../utils/schemas";
import { getUserResponseData } from "./user";

async function enrichedRoute(fastify: FastifyInstance, options: FastifyPluginOptions) {
  fastify.get<{ Querystring: { id: string, mode: string } }>('/chess/enriched',
  {
    schema: {
      response: enrichedSchema
    }
  },
  async (request, reply) => {
    const { id, mode } = getInputParameters(request);
    if (!areValidParameters(id, mode)) {
        reply.status(400).send({ error: "Invalid or missing 'id' or 'mode' parameter." });
        return;
    }
    try {
      const userResponseData = await getUserResponseData(id);
      const username = userResponseData.username;

      const userPerformanceResponseData = await getUserPerformanceResponseData(username, mode);
      const userEnrichedData = buildUserEnrichedData(id, username, userResponseData, userPerformanceResponseData);
      
      reply.status(200).send(userEnrichedData);
    } catch (error) {
      fastify.log.error(error);
      if (
        (axios.isAxiosError(error) && error.response?.status === 404) ||
        ((error as any).response?.status === 404)
      ) {
        return reply.status(404).send({ error: 'User or Game Mode not found.' });
      }

      reply.status(500).send({ error: 'Internal server error.' });
    }
  });
}

function areValidParameters(id: string | undefined, mode: string | undefined) {
    return id && mode;
}

function getInputParameters(request: any) {
  const id = request.query.id as string;
  const mode = request.query.mode as string;
  return { id, mode };
}

async function getUserPerformanceResponseData(username: string, mode: string) {
  const API_URL = `https://lichess.org/api/user/${username}/perf/${mode}`;
  const response = await axios.get(API_URL, {
    headers: { 'Accept': 'application/json' }
  });
  return response.data;
}

function buildUserEnrichedData(id: string, username: string, userInfo: any, userPerformanceResponseData: any) {
  const userResultStreak = {
    wins: {
      current: userPerformanceResponseData.stat.resultStreak.win.cur.v,
      max: userPerformanceResponseData.stat.resultStreak.win.max.v,
    },
    losses: {
      current: userPerformanceResponseData.stat.resultStreak.loss.cur.v,
      max: userPerformanceResponseData.stat.resultStreak.loss.max.v,
    }
  } 
  const enrichedDataResponse = {
    id: id,
    username: username,
    profile: userInfo.profile,
    playTime: userInfo.playTime,
    rank: userPerformanceResponseData.rank != null ? userPerformanceResponseData.rank : null,
    resultStreak: userResultStreak
  }
  return enrichedDataResponse;
}
    
export default enrichedRoute;
</file>

<file path="src/endpoints/top10.ts">
import { FastifyInstance, FastifyPluginOptions } from "fastify";
import axios from "axios";
import { top10Schema } from "../utils/schemas";

async function top10Route(fastify: FastifyInstance, options: FastifyPluginOptions) {
  fastify.get('/chess/top10',
  {
    schema: {
      response: top10Schema
    }
  },
  async (request, reply) => {
    try {
      const leaderboardResponseData = await getLeaderboardResponseData();
      const top10DataRenamed = renamePerfsNameToModes(leaderboardResponseData);

      reply.status(200).send(top10DataRenamed);
    } catch (error) {
      fastify.log.error(error);
      reply.status(500).send({ error: 'Internal server error.' });
    }
  });
}

async function getLeaderboardResponseData() {
  const API_URL = 'https://lichess.org/api/player';
  const response = await axios.get(API_URL, {
    headers: { 'Accept': 'application/json' }
  });
  return response.data;
}

function renamePerfsNameToModes(data: any) {
  const res: any = {};
  for (const mode in data) {
    if (Array.isArray(data[mode])) {
      res[mode] = data[mode].map(player => {
        const { perfs, ...rest } = player;
        return perfs !== undefined
          ? { ...rest, modes: perfs }
          : { ...rest }; 
      });
    } else {
      res[mode] = data[mode];
    }
  }
  return res;
}
export default top10Route;
</file>

<file path="src/endpoints/topPlayerHistory.ts">
import { FastifyInstance, FastifyPluginOptions } from "fastify";
import axios from "axios";
import { topPlayerHistorySchema } from "../utils/schemas";

async function topPlayerHistoryRoute(fastify: FastifyInstance, options: FastifyPluginOptions) {
  fastify.get<{ Querystring: { mode: string, top: string } }>('/chess/topPlayerHistory',
  {
    schema: {
      response: topPlayerHistorySchema
    }
  },
  async (request, reply) => {

    const { mode, top } = getInputParameters(request);
    if (!areValidParameters(mode, top)) {
      reply.status(400).send({ error: "Invalid or missing 'mode' or 'top' parameter." });
      return;
    }
    try {
      const leaderboardInfoData = await getLeaderboardInfoResponseData(top, mode);
      const user = leaderboardInfoData.users[parseInt(top) - 1];
      const username = user.username;

      const ratingHistoryData = await getRatingHistoryResponseData(username);
      const history = getRatingHistoryDataFromMode(ratingHistoryData, mode);
      const parsedHistory = parseHistoryDataToObject(history);

      const playerHistoryData = buildPlayerHistoryData(username, parsedHistory)

      reply.status(200).send(playerHistoryData);
    } catch (error) {
      fastify.log.error(error);
      if (
        (axios.isAxiosError(error) && error.response?.status === 404) ||
        ((error as any).response?.status === 404)
      ) {
        return reply.status(404).send({ error: 'Game Mode not found.' });
      }

      reply.status(500).send({ error: 'Internal server error.' });
    }
  });
}

function buildPlayerHistoryData(username: any, parsedHistory: any) {
  return {
    username: username,
    history: parsedHistory
  };
}

function getRatingHistoryDataFromMode(ratingHistoryData: any, mode: string) {
  return ratingHistoryData.find((item: any) => item.name.toLowerCase() === mode);
}

function parseHistoryDataToObject(history: any) {
  return history.points.map((item: any) => ({
    date: parseDateValuesToString(item),
    rating: item[3]
  }));
}

function parseDateValuesToString(dateArray: any[]): string {
  return dateArray.slice(0, 3).map((x: any) => String(x).padStart(2, '0')).join('-');
}

function areValidParameters(mode: string | undefined, top: string | undefined) {
  return mode && top && parseInt(top) <= 200 && parseInt(top) > 0;
}

function getInputParameters(request: any) {
  const mode = request.query.mode as string;
  const top = request.query.top as string;
  return { mode, top };
}

async function getLeaderboardInfoResponseData(top: string, mode: string) {
  const API_URL = `https://lichess.org/api/player/top/${top}/${mode}`;
  const response = await axios.get(API_URL, {
    headers: { 'Accept': 'application/json' }
  });
  return response.data;
}

async function getRatingHistoryResponseData(username: string) {
  const API_URL = `https://lichess.org/api/user/${username}/rating-history`;
  const response = await axios.get(API_URL, {
    headers: { 'Accept': 'application/json' }
  });
  return response.data;
}

export default topPlayerHistoryRoute;
</file>

<file path="src/endpoints/user.ts">
import { FastifyInstance, FastifyPluginOptions } from "fastify";
import axios from "axios";
import { userSchema } from "../utils/schemas";

async function usersRoute(fastify: FastifyInstance, options: FastifyPluginOptions) {
  fastify.get<{ Querystring: { id: string } }>('/chess/user', 
  {
    schema: {
      response: userSchema
    }
  },
  async (request, reply) => {
    const { id } = getInputParameters(request);
    if (!areValidParameters(id)) {
      reply.status(400).send({ error: "Invalid or missing 'id' parameter." });
      return;
    }
    try {
      const lichessResponseData = await getUserResponseData(id);
      const { perfs, ...rest } = lichessResponseData;
      const userDataRenamed = { ...rest, modes: perfs };

      reply.status(200).send(userDataRenamed);
    } catch (error) {
      fastify.log.error(error);
      if (
        (axios.isAxiosError(error) && error.response?.status === 404) ||
        ((error as any).response?.status === 404)
      ) {
        return reply.status(404).send({ error: 'User not found.' });
      }

      reply.status(500).send({ error: 'Internal server error.' });
    }
  });
}

function areValidParameters(id: string | undefined) {
  return id;
}

function getInputParameters(request: any) {
  const id = request.query.id as string;
  return { id };
}

export async function getUserResponseData(id: string) {
  const API_URL = `https://lichess.org/api/user/${id}`;
  const response = await axios.get(API_URL, {
    headers: { 'Accept': 'application/json' }
  });
  return response.data;
}

export default usersRoute;
</file>

</files>
